{"ast":null,"code":"export default {\n  \"namespaces\": {\n    \"tei\": \"http://www.tei-c.org/ns/1.0\",\n    \"teieg\": \"http://www.tei-c.org/ns/Examples\",\n    \"rng\": \"http://relaxng.org/ns/structure/1.0\"\n  },\n  \"tei\": {\n    \"eg\": [\"<pre>\", \"</pre>\"],\n    // inserts a link inside <ptr> using the @target; the link in the\n    // @href is piped through the rw (rewrite) function before insertion\n    \"ptr\": [\"<a href=\\\"$rw@target\\\">$@target</a>\"],\n    // wraps the content of the <ref> in an HTML link\n    \"ref\": [[\"[target]\", [\"<a href=\\\"$rw@target\\\">\", \"</a>\"]]],\n    \"graphic\": function (elt) {\n      let content = new Image();\n      content.src = this.rw(elt.getAttribute(\"url\"));\n\n      if (elt.hasAttribute(\"width\")) {\n        content.setAttribute(\"width\", elt.getAttribute(\"width\"));\n      }\n\n      if (elt.hasAttribute(\"height\")) {\n        content.setAttribute(\"height\", elt.getAttribute(\"height\"));\n      }\n\n      return content;\n    },\n    \"list\": [// will only run on a list where @type=\"gloss\"\n    [\"[type=gloss]\", function (elt) {\n      let dl = document.createElement(\"dl\");\n\n      for (let child of Array.from(elt.children)) {\n        if (child.nodeType == Node.ELEMENT_NODE) {\n          if (child.localName == \"tei-label\") {\n            let dt = document.createElement(\"dt\");\n            dt.innerHTML = child.innerHTML;\n            dl.appendChild(dt);\n          }\n\n          if (child.localName == \"tei-item\") {\n            let dd = document.createElement(\"dd\");\n            dd.innerHTML = child.innerHTML;\n            dl.appendChild(dd);\n          }\n        }\n      }\n\n      return dl;\n    }]],\n    \"note\": [// Make endnotes\n    [\"[place=end]\", function (elt) {\n      if (!this.noteIndex) {\n        this[\"noteIndex\"] = 1;\n      } else {\n        this.noteIndex++;\n      }\n\n      let id = \"_note_\" + this.noteIndex;\n      let link = document.createElement(\"a\");\n      link.setAttribute(\"id\", \"src\" + id);\n      link.setAttribute(\"href\", \"#\" + id);\n      link.innerHTML = this.noteIndex;\n      let content = document.createElement(\"sup\");\n      content.appendChild(link);\n      let notes = this.dom.querySelector(\"ol.notes\");\n\n      if (!notes) {\n        notes = document.createElement(\"ol\");\n        notes.setAttribute(\"class\", \"notes\");\n        this.dom.appendChild(notes);\n      }\n\n      let note = document.createElement(\"li\");\n      note.id = id;\n      note.innerHTML = elt.innerHTML;\n      notes.appendChild(note);\n      return content;\n    }], [\"_\", [\"(\", \")\"]]],\n    \"table\": function (elt) {\n      let table = document.createElement(\"table\");\n      table.innerHTML = elt.innerHTML;\n\n      if (table.firstElementChild.localName == \"tei-head\") {\n        let head = table.firstElementChild;\n        head.remove();\n        let caption = document.createElement(\"caption\");\n        caption.innerHTML = head.innerHTML;\n        table.appendChild(caption);\n      }\n\n      for (let row of Array.from(table.querySelectorAll(\"tei-row\"))) {\n        let tr = document.createElement(\"tr\");\n        tr.innerHTML = row.innerHTML;\n\n        for (let attr of Array.from(row.attributes)) {\n          tr.setAttribute(attr.name, attr.value);\n        }\n\n        row.parentElement.replaceChild(tr, row);\n      }\n\n      for (let cell of Array.from(table.querySelectorAll(\"tei-cell\"))) {\n        let td = document.createElement(\"td\");\n\n        if (cell.hasAttribute(\"cols\")) {\n          td.setAttribute(\"colspan\", cell.getAttribute(\"cols\"));\n        }\n\n        td.innerHTML = cell.innerHTML;\n\n        for (let attr of Array.from(cell.attributes)) {\n          td.setAttribute(attr.name, attr.value);\n        }\n\n        cell.parentElement.replaceChild(td, cell);\n      }\n\n      return table;\n    },\n    \"teiHeader\": function (e) {\n      this.hideContent(e, false);\n    },\n    \"title\": [[\"tei-titlestmt>tei-title\", function (elt) {\n      let title = document.createElement(\"title\");\n      title.innerHTML = elt.innerText;\n      document.querySelector(\"head\").appendChild(title);\n    }]]\n  },\n  \"teieg\": {\n    \"egXML\": function (elt) {\n      let pre = document.createElement(\"pre\");\n      pre.innerHTML = this.serialize(elt, true);\n      return pre;\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}
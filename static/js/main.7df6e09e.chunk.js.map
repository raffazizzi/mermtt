{"version":3,"sources":["Verovio.js","Music.js","TeiElement.js","Tei.js","Nav.js","Body.js","App.js","serviceWorker.js","index.js"],"names":["Verovio","window","verovio","toolkit","Music","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","show","renderMusic","notatedMusic","querySelector","getAttribute","Array","from","attributes","reduce","acc","att","name","value","url","fetch","concat","then","response","text","meiData","loadData","setOptions","pageWidth","adjustPageHeight","scale","setState","svg","renderPage","type","_this2","label","react_default","a","createElement","src_TeiElement","teiDomElement","music","dangerouslySetInnerHTML","__html","eActive","fActive","tabs","className","onClick","href","React","tagName","toLowerCase","objectSpread","forwardTeiAttributes","Component","TeiElement","src_Music_0","teiChildren","childNodes","map","teiEl","i","nodeType","key","nodeValue","Tei","allowedViews","view","getTEI","ct","CETEI","addBehavior","undefined","getHTML5","teiData","defaultView","indexOf","teiContent","viewStyle","charAt","toUpperCase","substr","App","views","isActive","activeView","react_router_dom","to","Body","Fragment","src_Nav","src_Tei","react_router","path","exact","component","p","src_Body","match","params","Boolean","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7df6e09e.chunk.js","sourcesContent":["// Unique instantiation of Verovio to be shared across components.\n\nconst Verovio = new window.verovio.toolkit()\n\nexport default Verovio","import React from 'react'\nimport Verovio from './Verovio'\nimport TeiElement from './TeiElement'\nimport './Music.scss'\n\nclass Music extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      show: 'svg'\n    }\n  }\n\n  componentDidMount() {\n    this.renderMusic(this.props.notatedMusic.querySelector('tei-ptr').getAttribute('target'))\n  }\n\n  forwardTeiAttributes() {\n    return Array.from(this.props.notatedMusic.attributes).reduce((acc, att) => {\n      acc[att.name] = att.value\n      return acc\n    }, {})\n  }\n\n  async renderMusic(url) {\n    const meiData = await fetch(`data/${url}`).then(response => response.text())\n    Verovio.loadData(meiData)\n    Verovio.setOptions({\n      pageWidth: 800,\n      adjustPageHeight: true,\n      scale: 50\n    })\n    this.setState({meiData, svg: Verovio.renderPage(1)}) \n  }\n\n  show(type) {\n    this.setState({show: type})\n  }\n\n  render() {\n    const url = this.props.notatedMusic.querySelector('tei-ptr').getAttribute('target')\n    const label = <TeiElement teiDomElement={this.props.notatedMusic.querySelector('tei-label')} />\n    let music = ''\n    if (this.state.svg && this.state.show === 'svg') {\n      music = <div dangerouslySetInnerHTML={{__html: this.state.svg}}/>\n    } else if (this.state.show === 'jpg') {\n      music = <TeiElement teiDomElement={this.props.notatedMusic.querySelector('tei-graphic')} />\n    }\n    const eActive = this.state.show === 'svg' ? 'MTabActive' : ''\n    const fActive = this.state.show === 'jpg' ? 'MTabActive' : ''\n    const tabs = (<div className=\"MusicTabs\">\n      {label}&nbsp;\n      <span onClick={() => this.show('svg')} className={eActive}>Engraved</span> |&nbsp;\n      <span onClick={() => this.show('jpg')} className={fActive}>Facsimile</span> |&nbsp;\n      <a href={`data/${url}`}>MEI</a>\n    </div>)\n    return React.createElement(this.props.notatedMusic.tagName.toLowerCase(), \n      {\n        ...this.forwardTeiAttributes(),\n      }, \n      [\n        tabs,\n        music\n      ]\n    )\n  }\n}\n\nexport default Music\n","import React from 'react'\nimport Music from './Music'\n\nclass TeiElement extends React.Component {\n  forwardTeiAttributes() {\n    return Array.from(this.props.teiDomElement.attributes).reduce((acc, att) => {\n      acc[att.name] = att.value\n      return acc\n    }, {})\n  }\n\n  render() {\n    // Special case for notatedMusic\n    if (this.props.teiDomElement.tagName.toLowerCase() === 'tei-notatedmusic') {\n      return <Music notatedMusic={this.props.teiDomElement}/>\n    } \n\n    const teiChildren = Array.from(this.props.teiDomElement.childNodes).map((teiEl, i) => { \n      switch (teiEl.nodeType) {\n        case 1:\n          return <TeiElement teiDomElement={teiEl} key={`${teiEl.tagName}_${i}`} />\n        case 3:\n          return teiEl.nodeValue\n        default:\n          return null\n      }        \n    })\n\n    return React.createElement(this.props.teiDomElement.tagName.toLowerCase(), \n      {\n        ...this.forwardTeiAttributes(),\n      }, \n      teiChildren\n    )\n  }\n}\n\nexport default TeiElement\n","import React from 'react'\nimport CETEI from 'CETEIcean'\nimport TeiElement from './TeiElement'\nimport './teiStyles/Base.scss'\nimport './teiStyles/Diplomatic.scss'\nimport './teiStyles/Diplomatic2.scss'\nimport './teiStyles/Edited.scss'\nimport './teiStyles/Modernized.scss'\n\nclass Tei extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n    this.allowedViews = this.props.allowedViews.map(view => {\n      return view.url\n    })\n  }\n\n  componentDidMount() {\n    this.getTEI()\n  }\n\n  async getTEI() {\n    const ct = new CETEI()\n    \n    // Override default CETEI TEI behaviors.\n    ct.addBehavior('tei', 'teiHeader', undefined)\n\n    const teiData = await ct.getHTML5('data/example.xml')\n    this.setState({\n      teiData\n    })\n  }\n\n  render() {\n    let view = this.props.defaultView\n    if (this.allowedViews.indexOf(this.props.view) > -1) {\n      view = this.props.view\n    }\n    const teiContent = this.state.teiData \n      ? <TeiElement teiDomElement={this.state.teiData} />\n      : 'Loading ...' \n    const viewStyle = view.charAt(0).toUpperCase() + view.substr(1).toLowerCase()\n    return <div className={`Tei ${viewStyle}`}>{teiContent}</div>\n  }\n}\n\nexport default Tei\n","import React from 'react'\nimport './Nav.scss'\nimport { Link } from \"react-router-dom\"\n\n\nclass App extends React.Component {\n  render() {\n    return (\n      <nav className=\"Nav\">\n        <ul>\n          {this.props.views.map((view, i) => {\n            let isActive = ''\n            if ((!this.props.activeView && view.url === this.props.defaultView)\n              || this.props.activeView === view.url) {\n              isActive = 'active'\n            }\n            return (\n              <li key={`l-${i}`} className={isActive}>\n                <Link to={`/${view.url}`}>{view.label}</Link>\n              </li>\n            )\n          })}\n        </ul>\n      </nav>\n    )\n  } \n}\n\nexport default App;\n","import React from 'react'\nimport Tei from './Tei'\nimport Nav from './Nav'\n\n\nclass Body extends React.Component {\n  constructor(props) {\n    super(props)\n    this.views = [\n      {\n        url: 'diplomatic',\n        label: 'Diplomatic'\n      },\n      {\n        url: 'diplomatic2',\n        label: 'Diplomatic 2'\n      },\n      {\n        url: 'edited',\n        label: 'Edited'\n      },\n      {\n        url: 'modernized',\n        label: 'Modernized'\n      },\n    ]\n    this.defaultView = 'diplomatic'\n  }\n\n  render() {\n    return (\n      <>\n        <Nav views={this.views} activeView={this.props.view} defaultView={this.defaultView}/>\n        <Tei \n            defaultView={this.props.defaultView}\n            view={this.props.view} \n            allowedViews={this.views} />\n      </>\n    )\n  } \n}\n\nexport default Body\n","import React from 'react'\nimport './App.scss'\nimport Body from './Body'\nimport { BrowserRouter as Router, Route } from \"react-router-dom\"\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.views = [\n      {\n        url: 'diplomatic',\n        label: 'Diplomatic'\n      },\n      {\n        url: 'diplomatic2',\n        label: 'Diplomatic 2'\n      },\n      {\n        url: 'edited',\n        label: 'Edited'\n      },\n      {\n        url: 'modernized',\n        label: 'Modernized'\n      },\n    ]\n    this.defaultView = 'diplomatic'\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Route path=\"/:view?\" exact component={(p) => \n            <Body \n              defaultView={this.defaultView}\n              view={p.match.params.view} />} />\n        </div>\n      </Router>\n    )\n  } \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}